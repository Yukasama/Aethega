
/*

HOW TO USE CLASSES?
Enter pre-defined classes as an additional class in your html element.

    -->  <div class="div smart_button"></div>


OVERVIEW OF EXISTING CLASSES

    - flex:                   sets "display: flex" to an element, mainly for space efficiency.

    - smart_button:           contains many useful properties of a fancy, hoverable button.

    - smart_button_outline:   same as smart_button, but with a outline design.

    - effect:                 add pseudo element in css-file (eg. element::before), then define color.

    - effect_underline:       same as effect, but with a underline hover-animation.

    - circle:                 predefined circle, mainly for space efficiency.

*/



.flex {  display: flex;  }
.grid {  display: grid;  }

.normal_button, .normal_button_outline {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 9px 23px;
    background: var(--color-first);
    color: white;
    border-radius: 50px;
    font-size: 0.95em !important;
}
.normal_button_outline {
    background: var(--color-theme);
    border: 2px solid var(--color-reverse);
    color: var(--color-reverse);
    padding: 7px 21px;
}

.smart_button, .smart_button_outline {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10px 25.5px;
    border-radius: var(--border-radius);

    color: white;
    font-size: var(--font-size-navbar);
    background: linear-gradient(to right, 
        var(--color-first), 
        var(--color-third), 
        var(--color-first));
    background-size: 250%;
    box-shadow: 0 10px 20px var(--color-block-shadow);

    transition: 0.8s, padding 0s, border 0s;
    cursor: pointer;
    border: none;
}
.smart_button_outline {
    background: linear-gradient(to right, 
        var(--color-theme) 50%, 
        var(--color-third), 
        var(--color-first));
    padding: 7.5px 23px;
    background-size: 400%;
    color: var(--color-reverse) !important;
    border: 2.5px solid var(--color-reverse);
}
.smart_button:hover, .smart_button_outline:hover {  background-position: right;  }
.smart_button_outline:hover {
    border: transparent;
    color: white !important;
    padding: 10px 25.5px;
}

.smart_box, .smart_list {
    display: flex;
    box-shadow: 0 10px 20px var(--color-block-shadow);
    border-radius: var(--border-radius);
    background: var(--color-theme);
}
.smart_box {
    align-items: center;
    justify-content: center;
}
.smart_list {
    flex-direction: column;
}




.effect::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    transform: scaleX(0);
    transition: transform 0.4s;
    background: var(--color-first);
}
.effect_underline::before{
    content: "";
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    height: 2px;
    transform: scaleX(0);
    transform-origin: 100% 50%;
    transition: transform 0.4s;
    background: var(--color-first);
}
.effect:hover::before, .effect_underline:hover::before {
    transform-origin: 0% 50%;
    transform: scaleX(1);
}




.inputField {
    display: flex;
    padding: 10px 20px;
    align-items: center;
    border: 0.5px gray solid;
}
.input_icon {
    margin-right: 20px;
}

.input {
    outline: none;
    resize: none;
    border: none;
    color: var(--color-reverse);
    width: 100%;
    height: 100%;
    background: transparent;
}
.input::before {
    content: '';
    right: 0;
    left: 0;
    bottom: 0;
    height: 1px;
    background: var(--color-first);
}
.input ~ span {
    position: absolute;
    left: 64px;
    z-index: -1;
    transition: 0.275s;
}
.input:focus ~ .input::after {
    transform: scale(1);
}
.input:focus ~ span, .input:valid ~ span, .input:invalid ~ span {
    color: var(--color-first);
    transform: translate(-50px, -35px);
}
.input:invalid ~ span {
    color: red;
}

input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus, 
input:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 30px var(--color-theme) inset !important;
}




.circle {
    position: absolute;
    height: 350px;
    width: 350px;
    border-radius: 50%;
    background: var(--color-first);
}


.hamburger {
    height: 20px;
    width: 20px;
    justify-content: space-evenly;
    align-items: center;
    flex-direction: column;
    cursor: pointer;
}
.hamburger_line {
    height: 2px;
    width: 25px;
    background: var(--color-reverse);
}
.hamburger_line_active1 {
    transform: rotate(45deg) translate(7px, 7px);
}
.hamburger_line_active2 {
    opacity: 0;
}
.hamburger_line_active3 {
    transform: rotate(-45deg) translate(6.2px, -6.2px);
} 




.red-gradient {
    background: linear-gradient(to left bottom,
            rgb(255, 150, 150),
            rgb(255, 100, 100),
            rgb(255, 99, 99), 
            rgb(255, 100, 100), 
            rgb(255, 150, 150));
    box-shadow: 0 10px 20px rgba(255, 0, 0, 0.4);
    background-size: 400%;
}
.yellow-gradient {
    background: linear-gradient(to left bottom,
            rgb(255, 231, 95),
            rgb(255, 201, 66),
            rgb(255, 188, 63), 
            rgb(255, 201, 66),
            rgb(255, 231, 95));
    box-shadow: 0 10px 20px rgba(255, 242, 0, 0.4);
    background-size: 400%;
}
.green-gradient {
    background: linear-gradient(to left bottom,
            rgb(124, 255, 94),
            rgb(79, 255, 85),
            rgb(0, 230, 4), 
            rgb(79, 255, 85),
            rgb(124, 255, 94));
    box-shadow: 0 10px 20px rgba(0, 255, 8, 0.4);
    background-size: 400%;
}
.cyan-gradient {
    background: linear-gradient(to left bottom,
            rgb(94, 212, 255),
            rgb(79, 190, 255),
            rgb(8, 177, 255), 
            rgb(79, 190, 255),
            rgb(94, 212, 255));
    box-shadow: 0 10px 20px rgba(0, 153, 255, 0.4);
    background-size: 400%;
}
.blue-gradient {
    background: linear-gradient(to left bottom,
            rgb(78, 78, 255),
            rgb(50, 43, 255),
            rgb(8, 16, 255), 
            rgb(50, 43, 255),
            rgb(78, 78, 255));
    box-shadow: 0 10px 20px rgba(0, 4, 255, 0.4);
    background-size: 400%;
}
.purple-gradient {
    background: linear-gradient(to left bottom,
            rgb(155, 78, 255),
            rgb(160, 43, 255),
            rgb(143, 0, 238), 
            rgb(160, 43, 255),
            rgb(155, 78, 255));
    box-shadow: 0 10px 20px rgba(140, 0, 255, 0.4);
    background-size: 400%;
}